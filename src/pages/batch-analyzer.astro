---
import Layout from '../layouts/Layout.astro'
import Section from '../components/ui/Section.astro'
import Row from '../components/ui/Row.astro'
import Col from '../components/ui/Col.astro'
import { eq } from 'drizzle-orm';
import { db } from '../db';
import { sessions } from '../db/schema';

const sessionToken = Astro.cookies.get("app_auth_token")?.value;

if (!sessionToken) {
  return Astro.redirect("/login");
}

const userInfo = await db.query.sessions.findFirst({
  where: eq(sessions.id, sessionToken),
  with: {
    user: {
      columns: {
        email: true,
      },
    },
  },
});

const userEmail = userInfo?.user?.email || 'No email found';


interface ApiKey {
  name?: string;
  api_key: string;
  plan?: string;
  requests?: number;
  renewal_date?: string;
}

let apiKeysData: ApiKey[] = [];

if (userEmail !== 'No email found') {
  try {
    const response = await fetch(`https://analyzemydream-api-key.vercel.app/api_keys?email=${encodeURIComponent(userEmail)}`);
    const result = await response.json();
    
    if (response.ok) {
      apiKeysData = result.api_keys || [];

    } else {
      console.error('API Error:', result.error || 'An error occurred. Please try again.');
    }
  } catch (error) {
    console.error('Fetch Error:', error);
  }
}

const hasApiKeys = apiKeysData.length > 0;

function censorApiKey(apiKey: string): string {
  return `AMD_*****${apiKey.slice(-4)}`;
}

const SEO = {
  title: 'Analyze My Dream | Batch-AI Dream Analyzer',
  description: 'Analiza múltiples sueños a la vez con nuestra herramienta de Analizador de Sueños Batch-AI. Soporte para hasta tres sueños y recibe un análisis completo para cada uno.'
};

---
<Layout title={SEO.title} description={SEO.description}>
  <Section id="analyze-intro" padding="none" classes="bg-neutral-50 dark:bg-neutral-900">
      <Row>
          <Col span="2" />
          <Col span="8" align="center">
              <br><h2 class="text-4xl font-semibold mb-4">Analiza hasta tres sueños con <strong>Batch-AI Dream Analyzer</strong>.</h2>
              <label for="dreamDescription" class="block text-lg font-medium mb-2">
                Permite analizar hasta tres sueños diferentes simultáneamente, proporcionando un análisis detallado para cada sueño y perspectivas sobre su significado colectivo.
              </label>
              <p class="text-sm text-gray-500 dark:text-gray-300 mb-4">
                  Utilice esta herramienta de manera responsable. Los resultados están destinados solo para orientación general. <strong><a href="/faq" style="color: #7BC7C7; text-decoration: none;">Más Información.</a></strong>
              </p>
              <br>
          </Col>
      </Row>
  </Section>
  <Section id="dream-form" padding="none" classes="bg-neutral-50 dark:bg-neutral-900">
      {hasApiKeys ? (
      <Row>
          <Col span="2" />
          <Col span="8" align="center">
              <form id="dreamForm" class="space-y-4">
                  <select id="apiKeySelect" name="apiKey" class="w-full p-2 border border-gray-300 rounded" style="background-color: transparent; width: 95%; border-radius: 10px; text-align: center;">
                      {apiKeysData.map((apiKey) => (
                          <option value={apiKey.api_key}>
                          {apiKey.plan ? `${apiKey.plan} Plan` : 'Sin Plan'} - 
                          Solicitudes: {apiKey.requests ? apiKey.requests : 'Sin datos'} - {censorApiKey(apiKey.api_key)}
                          </option>
                      ))}
                  </select>
                  <p class="text-sm text-gray-500 dark:text-gray-300 mb-4">
                   Ingrese una descripción detallada de sus sueños y nuestra IA generará un análisis completo para usted.
                  </p>
                  <div class="p-4 bg-white dark:bg-neutral-800 shadow-md rounded-lg space-y-4" style="border-radius:20px;">
                      <!-- Entrada del Sueño 1 -->
                      <textarea id="dreamDescription1" name="dreamDescription1" style="background:transparent; border-radius:10px;" rows="6" cols="50" minlength="30" required class="w-full p-2 border border-gray-300 rounded" placeholder="Ingrese una descripción detallada del primer sueño..."></textarea>
  
                      <!-- Entrada del Sueño 2 -->
                      <textarea id="dreamDescription2" name="dreamDescription2" style="background:transparent; border-radius:10px;" rows="6" cols="50" minlength="30" required class="w-full p-2 border border-gray-300 rounded" placeholder="Ingrese una descripción detallada del segundo sueño..."></textarea>
  
                      <!-- Entrada del Sueño 3 -->
                      <textarea id="dreamDescription3" name="dreamDescription3" style="background:transparent; border-radius:10px;" rows="6" cols="50" minlength="30" required class="w-full p-2 border border-gray-300 rounded" placeholder="Ingrese una descripción detallada del tercer sueño..."></textarea>
  
                      <input type="hidden" id="lang" name="lang" value="es" /> 
  
                      <div class="flex justify-center space-x-4 mt-4">
                          <button id="analyzeButton" type="submit" class="relative flex items-center justify-center text-white py-2 px-4 rounded-lg hover:bg-blue-600" style="background-color: rgba(123, 199, 199, var(--tw-bg-opacity));">
                              <span id="buttonText" style="font-weight: 700; font-size: 0.875rem;">Analizar Sueños</span>
                          </button>
                      </div>
                  </div>
              </form>
          </Col>
          <Col span="2" />
      </Row>
      <div id="analysisResult" class="mt-4 text-lg font-medium"></div>
      <br>
      ) : (
          <div style="text-align:center;">
            <p class="text-gray-700 dark:text-gray-300">Parece que no tiene <strong>claves API</strong> disponibles en este momento.</p>
            <p class="text-gray-700 dark:text-gray-300">Para desbloquear el acceso completo, considere seleccionar un plan que se adapte a sus necesidades.</p>
            <div class="flex justify-center">
              <a href="/pricing" class="w-52 flex items-center justify-center text-white py-2 px-4 rounded-lg hover:bg-blue-600" style="background-color: rgba(123, 199, 199, var(--tw-bg-opacity));">Explorar Planes</a>
            </div>
          </div>
          <br>
      )}
  </Section>
</Layout>
  
<script type="module">
    function formatMarkdown(markdown) {
        let html = markdown
            .replace(/---/g, '')
            .replace(/(Batch-AI Dream Analysis:)/g, '<span style="color: #7BC7C7;">$1</span>') 
            .replace(/\*\*(.*?)\*\*/g, '<span class="ia-subtitle" style="color: #7BC7C7;">$1</span> ')
            .replace(/\*(.*?)\*/g, ' <em class="ia-text">$1</em> ')
            .replace(/(?:^|\n)\* (.*?)(?=\n|$)/g, '<li class="ia-list" style="color: #94A3B8;">- $1</li>')
            .replace(/\n/g, '<br/>');
        html = html.replace(/(<li[^>]*>.*?<\/li>)(?=<li|$)/g, '<ul>$1</ul>');
        html = html.replace(/(?:<br\/>)+/g, '</p><p>').replace(/(^<br\/>)+|(<br\/>)+$/g, '').replace(/(^|\n)(?!<p>)(.*?)(?=\n|$)/g, '<p>$2</p>');
        return html;
    }

    document.getElementById('dreamForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        const apiKeySelect = document.getElementById('apiKeySelect');
        const analyzeButton = document.getElementById('analyzeButton');
        const buttonText = document.getElementById('buttonText');
        const dreamDescription1 = document.getElementById('dreamDescription1');
        const dreamDescription2 = document.getElementById('dreamDescription2');
        const dreamDescription3 = document.getElementById('dreamDescription3');
        const analysisResult = document.getElementById('analysisResult');
        const lang = document.getElementById('lang').value;

        if (!analyzeButton || !buttonText || !dreamDescription1 || !dreamDescription2 || !dreamDescription3 || !analysisResult) {
            console.error('One or more elements are missing.');
            return;
        }

        buttonText.textContent = 'Analizando...';
        analyzeButton.disabled = true;
        const selectedApiKey = apiKeySelect.value;

        try {
            const response = await fetch(`https://analyzemydream-api.vercel.app/batch-analyzer/${selectedApiKey}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    dreams: {
                        dream1: dreamDescription1.value,
                        dream2: dreamDescription2.value,
                        dream3: dreamDescription3.value
                    },
                    lang: lang
                }),
            });

            const result = await response.json();
            if (response.ok) {
                const formattedAnalysis = formatMarkdown(result.combined_analysis || 'No analysis found');
                analysisResult.innerHTML = formattedAnalysis; 
                buttonText.textContent = 'Try Again';
            } else {
                analysisResult.textContent = result.error || 'An error occurred'; 
                buttonText.textContent = 'Analyze Dreams';
            }
        } catch (error) {
            analysisResult.textContent = 'An error occurred. Please try again.';
            console.error('Fetch error:', error);  
            buttonText.textContent = 'Analyze Dreams';
        } finally {
            analyzeButton.disabled = false;
        }
    });
</script>

<style>
    .tabs-container {
      margin-bottom: 20px;
    }
    
    .tab-item {
      display: inline-block;
      text-align: center;
      cursor: pointer;
      transition: background-color 0.3s, color 0.3s, border-color 0.3s;
      font-size: 16px;
    }
    
    .tab-item.active {
      background-color: #7BC7C7;
      color: white;
    }
    
    .tab-item:hover {
      background-color: rgba(123, 199, 199, 0.2);
      border-color: #7BC7C7;
    }
    
    @media (prefers-color-scheme: dark) {
      .tab-item {
        color: #94A3B8;
      }
    }

    @media (max-width: 1024px) {
    .tabs {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 10px;
    }

    .tab-item {
        flex: 1 1 calc(33.333% - 10px);
        margin-bottom: 10px;
        text-align: center;
    } 
  }
</style>
