---
import Layout from '../layouts/Layout.astro'
import Section from '../components/ui/Section.astro'
import Row from '../components/ui/Row.astro'
import Col from '../components/ui/Col.astro'
import { eq } from 'drizzle-orm';
import { db } from '../db';
import { sessions } from '../db/schema';

const sessionToken = Astro.cookies.get("app_auth_token")?.value;

if (!sessionToken) {
  return Astro.redirect("/login");
}

const userInfo = await db.query.sessions.findFirst({
  where: eq(sessions.id, sessionToken),
  with: {
    user: {
      columns: {
        email: true,
      },
    },
  },
});

const userEmail = userInfo?.user?.email || 'No email found';


interface ApiKey {
  name?: string;
  api_key: string;
  plan?: string;
  requests?: number;
  renewal_date?: string;
}

let apiKeysData: ApiKey[] = [];

if (userEmail !== 'No email found') {
  try {
    const response = await fetch(`https://analyzemydream-api-key.vercel.app/api_keys?email=${encodeURIComponent(userEmail)}`);
    const result = await response.json();
    
    if (response.ok) {
      apiKeysData = result.api_keys || [];
    } else {
      console.error('API Error:', result.error || 'An error occurred. Please try again.');
    }
  } catch (error) {
    console.error('Fetch Error:', error);
  }
}

const hasApiKeys = apiKeysData.length > 0;

function censorApiKey(apiKey: string): string {
  return `AMD_*****${apiKey.slice(-4)}`;
}

const SEO = {
  title: 'Analyze My Dream | Advanced-AI Dream Analyzer',
  description: 'Experience detailed dream analysis with our Advanced-AI Dream Analyzer tool, using pre-defined parameters based on academic research.'
};

---
<Layout title={SEO.title} description={SEO.description}>
<Section id="analyze-intro" padding="none" classes="bg-neutral-50 dark:bg-neutral-900">
    <Row>
        <Col span="2" />
        <Col span="8" align="center">
            <br><h2 class="text-4xl font-semibold mb-4">Gain access to deep dream analysis through our <strong>Advanced-AI Dream Analyzer</strong> tool.</h2>
            <label for="dreamDescription" class="block text-lg font-medium mb-2">
                Designed to reveal significant messages and insights within your dreams using pre-defined parameters, which are supported by academic research.
            </label>
            
        </Col>
    </Row>
</Section>

<Section id="dream-form" padding="none" classes="bg-neutral-50 dark:bg-neutral-900">
    {hasApiKeys ? (
    <Row>
        <Col span="8" align="center">
            <form id="dreamForm" class="space-y-4">
                <p class="text-sm text-gray-500 dark:text-gray-300 mb-4">
                    Please use this tool responsibly. The results are intended for general guidance only.  <strong><a href="/faq" style="color: #7BC7C7; text-decoration: none;">Learn More.</a></strong>
                </p>   
                <div class="p-4 bg-white dark:bg-neutral-800 shadow-md rounded-lg space-y-4" style="border-radius:20px;">
                    <!-- Dream Type -->
                    <div class="card">
                        <h3 class="text-lg font-medium mb-2">Dream Type</h3>
                        <div class="flex flex-wrap" style="justify-content:center;">
                            <label class="mr-4"><input type="radio" name="dreamType" value="Experienced" /> Experienced</label>
                            <label class="mr-4"><input type="radio" name="dreamType" value="Lucid" /> Lucid</label>
                            <label class="mr-4"><input type="radio" name="dreamType" value="Blurred" /> Blurred</label>
                            <label><input type="radio" name="dreamType" value="N/A" /> N/A</label>
                        </div>
                    </div>
    
                    <!-- Dream Importance -->
                    <div class="card">
                        <h3 class="text-lg font-medium mb-2">Dream Importance</h3>
                        <div class="flex flex-wrap" style="justify-content:center;">
                            <label class="mr-4"><input type="radio" name="dreamImportance" value="Insignificant" /> Insignificant</label>
                            <label class="mr-4"><input type="radio" name="dreamImportance" value="Neutral" /> Neutral</label>
                            <label class="mr-4"><input type="radio" name="dreamImportance" value="Very Important" /> Very Important</label>
                            <label><input type="radio" name="dreamImportance" value="N/A" /> N/A</label>
                        </div>
                    </div>
    
                    <!-- Main Emotions -->
                    <div class="card">
                        <h3 class="text-lg font-medium mb-2">Main Emotions</h3>
                        <div class="flex flex-wrap" style="justify-content:center;">
                            <label class="mr-4"><input type="checkbox" name="mainEmotions" value="Happiness" /> Happiness</label>
                            <label class="mr-4"><input type="checkbox" name="mainEmotions" value="Sadness" /> Sadness</label>
                            <label class="mr-4"><input type="checkbox" name="mainEmotions" value="Fear" /> Fear</label>
                            <label class="mr-4"><input type="checkbox" name="mainEmotions" value="Anxiety" /> Anxiety</label>
                            <label class="mr-4"><input type="checkbox" name="mainEmotions" value="Anger" /> Anger</label>
                            <label><input type="checkbox" name="mainEmotions" value="N/A" /> N/A</label>
                        </div>
                    </div>
    
                    <!-- Dream Context -->
                    <div class="card">
                        <h3 class="text-lg font-medium mb-2">Dream Context</h3>
                        <div class="flex flex-wrap" style="justify-content:center;">
                            <label class="mr-4"><input type="radio" name="dreamContext" value="Familiar" /> Familiar</label>
                            <label class="mr-4"><input type="radio" name="dreamContext" value="Unknown" /> Unknown</label>
                            <label class="mr-4"><input type="radio" name="dreamContext" value="Natural Environment" /> Natural Environment</label>
                            <label class="mr-4"><input type="radio" name="dreamContext" value="Urban Environment" /> Urban Environment</label>
                            <label><input type="radio" name="dreamContext" value="N/A" /> N/A</label>
                        </div>
                    </div>
    
                    <!-- Dream State -->
                    <div class="card">
                        <h3 class="text-lg font-medium mb-2">Dream State</h3>
                        <div class="flex flex-wrap" style="justify-content:center;">
                            <label class="mr-4"><input type="radio" name="dreamState" value="Refreshed" /> Refreshed</label>
                            <label class="mr-4"><input type="radio" name="dreamState" value="Tired" /> Tired</label>
                            <label class="mr-4"><input type="radio" name="dreamState" value="Confused" /> Confused</label>
                            <label class="mr-4"><input type="radio" name="dreamState" value="Indifferent" /> Indifferent</label>
                            <label><input type="radio" name="dreamState" value="N/A" /> N/A</label>
                        </div>
                    </div>
    
                    <!-- Dream Frequency -->
                    <div class="card">
                        <h3 class="text-lg font-medium mb-2">Dream Frequency</h3>
                        <div class="flex flex-wrap" style="justify-content:center;">
                            <label class="mr-4"><input type="radio" name="dreamFrequency" value="Rarely" /> Rarely</label>
                            <label class="mr-4"><input type="radio" name="dreamFrequency" value="Occasionally" /> Occasionally</label>
                            <label class="mr-4"><input type="radio" name="dreamFrequency" value="Frequently" /> Frequently</label>
                            <label class="mr-4"><input type="radio" name="dreamFrequency" value="Always" /> Always</label>
                            <label><input type="radio" name="dreamFrequency" value="N/A" /> N/A</label>
                        </div>
                    </div>

                    <!-- Dream Expectations -->
                    <div class="card">
                        <h3 class="text-lg font-medium mb-2">Dream Expectations</h3>
                        <div class="flex flex-wrap" style="justify-content:center;">
                            <label class="mr-4"><input type="radio" name="dreamExpectations" value="Problem Resolution" /> Problem Resolution</label>
                            <label class="mr-4"><input type="radio" name="dreamExpectations" value="Personal Insight" /> Personal Insight</label>
                            <label class="mr-4"><input type="radio" name="dreamExpectations" value="Warnings" /> Warnings</label>
                            <label class="mr-4"><input type="radio" name="dreamExpectations" value="No Expectation" /> No Expectation</label>
                            <label><input type="radio" name="dreamExpectations" value="N/A" /> N/A</label>
                        </div>
                    </div>
                </div>
                <select id="apiKeySelect" name="apiKey" class="w-full p-2 border border-gray-300 rounded" style="background-color: transparent;  border-radius: 10px; text-align: center;">
                {apiKeysData.map((apiKey) => (
                    <option value={apiKey.api_key}>
                    {apiKey.plan ? `${apiKey.plan} Plan` : 'No Plan'} - 
                    Requests: {apiKey.requests ? apiKey.requests : 'No data'} - {censorApiKey(apiKey.api_key)}
                    </option>
                ))}
                </select>
                <p class="text-sm text-gray-500 dark:text-gray-300 mb-4">
                    Provide a detailed description of your dream and optionally select from a variety of pre-defined parameters. Our AI will then deliver an in-depth analysis tailored to your inputs.
                </p>
                 <!-- Dream Input -->
                <textarea id="dreamDescription" name="dreamDescription" style="background:transparent; border-radius:10px;" rows="6" cols="50" minlength="30" required class="w-full p-2 border border-gray-300 rounded" placeholder="Enter a detailed description of your dream..."></textarea>

                <p id="analysisResult" class="mt-4" style="text-align: center;"></p>
                <div class="flex justify-center space-x-4 mt-4">
                    <button id="analyzeButton" type="submit" class="relative flex items-center justify-center text-white py-2 px-4 rounded-lg hover:bg-blue-600" style="background-color: rgba(123, 199, 199, var(--tw-bg-opacity));">
                        <span id="buttonText" style="font-weight: 700; font-size: 0.875rem;">Analyze My Dream</span>
                    </button>
                </div>
                <br>
            </form>
        </Col>
        <Col span="2" />
    </Row>
    ) : (
        <div style="text-align:center;">
          <br>
          <p class="text-gray-700 dark:text-gray-300">It seems you don't have any <strong>API keys</strong> available at the moment.</p>
          <p class="text-gray-700 dark:text-gray-300">To unlock full access, please consider selecting a plan that suits your needs.</p>
          <div class="flex justify-center">
            <a href="/pricing" class="w-52 flex items-center justify-center text-white py-2 px-4 rounded-lg hover:bg-blue-600" style="background-color: rgba(123, 199, 199, var(--tw-bg-opacity));">Explore Plans</a>
          </div>
        </div>
        <br>
        )}
</Section>

</Layout>

<script type="module">
    document.getElementById('dreamForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        const apiKeySelect = document.getElementById('apiKeySelect');
        const analyzeButton = document.getElementById('analyzeButton');
        const buttonText = document.getElementById('buttonText');
        const dreamDescription = document.getElementById('dreamDescription');
        const analysisResult = document.getElementById('analysisResult');
        const dreamType = document.querySelector('input[name="dreamType"]:checked')?.value || "N/A";
        const dreamImportance = document.querySelector('input[name="dreamImportance"]:checked')?.value || "N/A";
        const mainEmotions = Array.from(document.querySelectorAll('input[name="mainEmotions"]:checked')).map(el => el.value).join(", ") || "N/A";
        const dreamContext = document.querySelector('input[name="dreamContext"]:checked')?.value || "N/A";
        const dreamState = document.querySelector('input[name="dreamState"]:checked')?.value || "N/A";
        const dreamFrequency = document.querySelector('input[name="dreamFrequency"]:checked')?.value || "N/A";
        const dreamExpectations = document.querySelector('input[name="dreamExpectations"]:checked')?.value || "N/A";
        
        const additionalInfo = `
            Dream Type: ${dreamType}
            Dream Importance: ${dreamImportance}
            Main Emotions: ${mainEmotions}
            Dream Context: ${dreamContext}
            Dream State: ${dreamState}
            Dream Frequency: ${dreamFrequency}
            Dream Expectations: ${dreamExpectations}
        `;

        const fullDescription = `${dreamDescription.value}\n\n${additionalInfo}`;

        if (!analyzeButton || !buttonText || !dreamDescription || !apiKeySelect || !analysisResult) {
            console.error('One or more elements are missing.');
            return;
        }

        buttonText.textContent = 'Analyzing...';
        analyzeButton.disabled = true;
        const selectedApiKey = apiKeySelect.value;

        try {
            const response = await fetch(`https://analyzemydream-api.vercel.app/analyzer/${selectedApiKey}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    dream_description: fullDescription,
                    lang: 'en'
                }),
            });

            const result = await response.json();
            if (response.ok) {
                analysisResult.innerHTML = `<strong>Advanced-AI Dream Analysis:</strong> ${result.analysis}`;
                buttonText.textContent = 'Try Again';
                analyzeButton.removeEventListener('click', handleFormSubmit);
                analyzeButton.addEventListener('click', handleClearInput);
            } else {
                analysisResult.textContent = result.error;
                buttonText.textContent = 'Analyze Your Dream';
            }
        } catch (error) {
            analysisResult.textContent = 'An error occurred. Please try again.';
            buttonText.textContent = 'Analyze Your Dream';
        } finally {
            analyzeButton.disabled = false;
        }

        function handleClearInput() {
            dreamDescription.value = '';
            analysisResult.textContent = '';
            buttonText.textContent = 'Analyze Your Dream';
            analyzeButton.removeEventListener('click', handleClearInput);
            analyzeButton.addEventListener('click', handleFormSubmit);
        }

        function handleFormSubmit() {
            document.getElementById('dreamForm').dispatchEvent(new Event('submit'));
        }
    });
</script>
<style>
    .tabs-container {
      margin-bottom: 20px;
    }
    
    .tab-item {
      display: inline-block;
      text-align: center;
      cursor: pointer;
      transition: background-color 0.3s, color 0.3s, border-color 0.3s;
      font-size: 16px;
    }
    
    .tab-item.active {
      background-color: #7BC7C7;
      color: white;
    }
    
    .tab-item:hover {
      background-color: rgba(123, 199, 199, 0.2);
      border-color: #7BC7C7;
    }
    
    @media (prefers-color-scheme: dark) {
      .tab-item {
        color: #94A3B8;
      }
    }

    @media (max-width: 1024px) {
    .tabs {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 10px;
    }

    .tab-item {
        flex: 1 1 calc(33.333% - 10px);
        margin-bottom: 10px;
        text-align: center;
    } 
  }
</style>
